{"ast":null,"code":"export function filter(games, values) {\n  let filtered = [];\n\n  if (values.genre === \"All\" && values.created === \"All\") {\n    filtered = games;\n  } else if (values.genre !== \"All\" && values.created === \"All\") {\n    filtered = games.filter(g => {\n      if (g.created) {\n        return g.genres.map(n => n.name === values.genre);\n      } else {\n        return g.genres.includes(values.genre);\n      }\n    });\n  } else if (values.genre === \"All\" && values.created !== \"All\") {\n    if (values.created) {\n      filtered = games.filter(g => g.created === true);\n    } else {\n      filtered = games.filter(g => g.created === false);\n    }\n  } else {\n    filtered = games.filter(g => {\n      if (g.created) {\n        filtered = games.filter(g => {\n          return g.genres.map(n => n.name === values.genre) && g.created === values.created;\n        });\n      } else {\n        filtered = games.filter(g => {\n          return g.genres.includes(values.genre) && g.created === values.created;\n        });\n      }\n\n      return filtered;\n    });\n  }\n\n  return filtered;\n}","map":{"version":3,"names":["filter","games","values","filtered","genre","created","g","genres","map","n","name","includes"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/redux/utils.js"],"sourcesContent":["export function filter(games, values) {\n  let filtered = [];\n  if (values.genre === \"All\" && values.created === \"All\") {\n    filtered = games;\n  } else if (values.genre !== \"All\" && values.created === \"All\") {\n    filtered = games.filter((g) => {\n      if (g.created) {\n        return g.genres.map((n) => n.name === values.genre);\n      } else {\n        return g.genres.includes(values.genre);\n      }\n    });\n  } else if (values.genre === \"All\" && values.created !== \"All\") {\n    if (values.created) {\n      filtered = games.filter((g) => g.created === true);\n    } else {\n      filtered = games.filter((g) => g.created === false);\n    }\n  } else {\n    filtered = games.filter((g) => {\n      if (g.created) {\n        filtered = games.filter((g) => {\n          return (\n            g.genres.map((n) => n.name === values.genre) &&\n            g.created === values.created\n          );\n        });\n      } else {\n        filtered = games.filter((g) => {\n          return (\n            g.genres.includes(values.genre) && g.created === values.created\n          );\n        });\n      }\n      return filtered;\n    });\n  }\n  return filtered;\n}\n"],"mappings":"AAAA,OAAO,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;EACpC,IAAIC,QAAQ,GAAG,EAAf;;EACA,IAAID,MAAM,CAACE,KAAP,KAAiB,KAAjB,IAA0BF,MAAM,CAACG,OAAP,KAAmB,KAAjD,EAAwD;IACtDF,QAAQ,GAAGF,KAAX;EACD,CAFD,MAEO,IAAIC,MAAM,CAACE,KAAP,KAAiB,KAAjB,IAA0BF,MAAM,CAACG,OAAP,KAAmB,KAAjD,EAAwD;IAC7DF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAO;MAC7B,IAAIA,CAAC,CAACD,OAAN,EAAe;QACb,OAAOC,CAAC,CAACC,MAAF,CAASC,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWR,MAAM,CAACE,KAAtC,CAAP;MACD,CAFD,MAEO;QACL,OAAOE,CAAC,CAACC,MAAF,CAASI,QAAT,CAAkBT,MAAM,CAACE,KAAzB,CAAP;MACD;IACF,CANU,CAAX;EAOD,CARM,MAQA,IAAIF,MAAM,CAACE,KAAP,KAAiB,KAAjB,IAA0BF,MAAM,CAACG,OAAP,KAAmB,KAAjD,EAAwD;IAC7D,IAAIH,MAAM,CAACG,OAAX,EAAoB;MAClBF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAOA,CAAC,CAACD,OAAF,KAAc,IAAlC,CAAX;IACD,CAFD,MAEO;MACLF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAOA,CAAC,CAACD,OAAF,KAAc,KAAlC,CAAX;IACD;EACF,CANM,MAMA;IACLF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAO;MAC7B,IAAIA,CAAC,CAACD,OAAN,EAAe;QACbF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAO;UAC7B,OACEA,CAAC,CAACC,MAAF,CAASC,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWR,MAAM,CAACE,KAAtC,KACAE,CAAC,CAACD,OAAF,KAAcH,MAAM,CAACG,OAFvB;QAID,CALU,CAAX;MAMD,CAPD,MAOO;QACLF,QAAQ,GAAGF,KAAK,CAACD,MAAN,CAAcM,CAAD,IAAO;UAC7B,OACEA,CAAC,CAACC,MAAF,CAASI,QAAT,CAAkBT,MAAM,CAACE,KAAzB,KAAmCE,CAAC,CAACD,OAAF,KAAcH,MAAM,CAACG,OAD1D;QAGD,CAJU,CAAX;MAKD;;MACD,OAAOF,QAAP;IACD,CAhBU,CAAX;EAiBD;;EACD,OAAOA,QAAP;AACD"},"metadata":{},"sourceType":"module"}