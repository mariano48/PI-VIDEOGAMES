{"ast":null,"code":"var _jsxFileName = \"/home/mariano/Documents/PI-Videogames-main/client/src/components/Games/Games.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Error from \"../Error/Error\";\nimport GameCards from \"../GameCards/GameCards\";\nimport Loading from \"./Loading\";\nimport NavBar from \"./NavBar\";\nimport SearchBar from \"./SearchBar\";\nimport Pagination from \"./Pagination\";\nimport Filters from \"./Filters\";\nimport { getAllGenres, getAllVideogames } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Games() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.gamesFiltered);\n  const genres = useSelector(state => state.genres);\n  const loading = useSelector(state => state.loading);\n  const error = useSelector(state => state.error);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 15;\n  const currentList = useMemo(() => {\n    const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n    const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n    return games.slice(indexOfFirstItem, indexOfLastItem);\n  }, [games, currentPage, itemsPerPage]);\n  useEffect(() => {\n    dispatch(getAllGenres());\n    dispatch(getAllVideogames());\n  }, [dispatch]);\n\n  function handlePage(n) {\n    setCurrentPage(n);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        genres: genres,\n        handlePage: handlePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        games: games,\n        itemsPerPage: itemsPerPage,\n        handlePage: handlePage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameCards, {\n        games: currentList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Games, \"keqo7/6lWRTGaJ/j4qHjEP4f5Hg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useDispatch","useSelector","Error","GameCards","Loading","NavBar","SearchBar","Pagination","Filters","getAllGenres","getAllVideogames","Games","dispatch","games","state","gamesFiltered","genres","loading","error","currentPage","setCurrentPage","itemsPerPage","currentList","indexOfFirstItem","indexOfLastItem","slice","handlePage","n"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/components/Games/Games.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Error from \"../Error/Error\";\nimport GameCards from \"../GameCards/GameCards\";\nimport Loading from \"./Loading\";\nimport NavBar from \"./NavBar\";\nimport SearchBar from \"./SearchBar\";\nimport Pagination from \"./Pagination\";\nimport Filters from \"./Filters\";\nimport { getAllGenres, getAllVideogames } from \"../../redux/actions\";\n\nexport default function Games() {\n  const dispatch = useDispatch();\n  const games = useSelector((state) => state.gamesFiltered);\n  const genres = useSelector((state) => state.genres);\n  const loading = useSelector((state) => state.loading);\n  const error = useSelector((state) => state.error);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 15;\n  const currentList = useMemo(() => {\n    const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n    const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n    return games.slice(indexOfFirstItem, indexOfLastItem);\n  }, [games, currentPage, itemsPerPage]);\n\n  useEffect(() => {\n    dispatch(getAllGenres());\n    dispatch(getAllVideogames());\n  }, [dispatch]);\n\n  function handlePage(n) {\n    setCurrentPage(n);\n  }\n\n  return (\n    <div className=\"Home\">\n      <NavBar />\n      <hr />\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Error error={error} />\n      ) : (\n        <div>\n          <SearchBar />\n          <Filters genres={genres} handlePage={handlePage} />\n          <Pagination\n            games={games}\n            itemsPerPage={itemsPerPage}\n            handlePage={handlePage}\n            currentPage={currentPage}\n          />\n          <hr />\n          <GameCards games={currentList} />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,qBAA/C;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAzB;EACA,MAAMC,MAAM,GAAGf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,MAAlB,CAA1B;EACA,MAAMC,OAAO,GAAGhB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACG,OAAlB,CAA3B;EACA,MAAMC,KAAK,GAAGjB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACI,KAAlB,CAAzB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMuB,YAAY,GAAG,EAArB;EACA,MAAMC,WAAW,GAAGvB,OAAO,CAAC,MAAM;IAChC,MAAMwB,gBAAgB,GAAG,CAACJ,WAAW,GAAG,CAAf,IAAoBE,YAA7C;IACA,MAAMG,eAAe,GAAGD,gBAAgB,GAAGF,YAA3C;IACA,OAAOR,KAAK,CAACY,KAAN,CAAYF,gBAAZ,EAA8BC,eAA9B,CAAP;EACD,CAJ0B,EAIxB,CAACX,KAAD,EAAQM,WAAR,EAAqBE,YAArB,CAJwB,CAA3B;EAMAxB,SAAS,CAAC,MAAM;IACde,QAAQ,CAACH,YAAY,EAAb,CAAR;IACAG,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;EACD,CAHQ,EAGN,CAACE,QAAD,CAHM,CAAT;;EAKA,SAASc,UAAT,CAAoBC,CAApB,EAAuB;IACrBP,cAAc,CAACO,CAAD,CAAd;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGV,OAAO,gBACN,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADM,GAEJC,KAAK,gBACP,QAAC,KAAD;MAAO,KAAK,EAAEA;IAAd;MAAA;MAAA;MAAA;IAAA,QADO,gBAGP;MAAA,wBACE,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QAAS,MAAM,EAAEF,MAAjB;QAAyB,UAAU,EAAEU;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,UAAD;QACE,KAAK,EAAEb,KADT;QAEE,YAAY,EAAEQ,YAFhB;QAGE,UAAU,EAAEK,UAHd;QAIE,WAAW,EAAEP;MAJf;QAAA;QAAA;QAAA;MAAA,QAHF,eASE;QAAA;QAAA;QAAA;MAAA,QATF,eAUE,QAAC,SAAD;QAAW,KAAK,EAAEG;MAAlB;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA/CuBX,K;UACLX,W,EACHC,W,EACCA,W,EACCA,W,EACFA,W;;;KALQU,K"},"metadata":{},"sourceType":"module"}