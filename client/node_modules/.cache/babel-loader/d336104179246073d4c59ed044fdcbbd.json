{"ast":null,"code":"import { GET_ALL_VIDEOGAMES, GET_ALL_GENRES, GET_GAME_BY_ID, GET_GAMES_BY_NAME, GET_ALL_PLATFORMS, FILTER_BY, SORT_GAMES, CREATE_GAME, RESET_FILTERS, LOADING, NOT_FOUND } from \"./common/constants\";\nimport { filter, sort } from \"./common/utils\";\nconst initialState = {\n  games: [],\n  gamesFiltered: [],\n  genres: [],\n  gameDetail: [],\n  platforms: [],\n  loading: true,\n  error: null,\n  response: null\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return { ...state,\n        games: action.payload,\n        gamesFiltered: sort(action.payload, \"AZ\"),\n        gameDetail: [],\n        error: null,\n        loading: false,\n        response: null\n      };\n\n    case GET_ALL_GENRES:\n      return { ...state,\n        genres: action.payload,\n        error: null\n      };\n\n    case GET_GAME_BY_ID:\n      return { ...state,\n        gameDetail: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case GET_GAMES_BY_NAME:\n      return { ...state,\n        gamesFiltered: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case GET_ALL_PLATFORMS:\n      return { ...state,\n        platforms: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case FILTER_BY:\n      const gamesToFilter = state.games;\n      const gamesFiltered = filter(gamesToFilter, action.payload);\n\n      if (!gamesFiltered.length) {\n        return { ...state,\n          gamesFiltered: gamesFiltered,\n          error: \"No results match the filters\"\n        };\n      } else {\n        return { ...state,\n          gamesFiltered: gamesFiltered\n        };\n      }\n\n    case SORT_GAMES:\n      const gamesToSort = state.gamesFiltered;\n      return { ...state,\n        gamesFiltered: sort(gamesToSort, action.payload)\n      };\n\n    case RESET_FILTERS:\n      const filtersReseted = state.games;\n      return { ...state,\n        gamesFiltered: sort(filtersReseted, {\n          param: \"name\",\n          type: \"ASC\"\n        }),\n        error: null\n      };\n\n    case CREATE_GAME:\n      return { ...state,\n        response: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case LOADING:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case NOT_FOUND:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_ALL_VIDEOGAMES","GET_ALL_GENRES","GET_GAME_BY_ID","GET_GAMES_BY_NAME","GET_ALL_PLATFORMS","FILTER_BY","SORT_GAMES","CREATE_GAME","RESET_FILTERS","LOADING","NOT_FOUND","filter","sort","initialState","games","gamesFiltered","genres","gameDetail","platforms","loading","error","response","rootReducer","state","action","type","payload","gamesToFilter","length","gamesToSort","filtersReseted","param"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/redux/reducer.js"],"sourcesContent":["import {\n  GET_ALL_VIDEOGAMES,\n  GET_ALL_GENRES,\n  GET_GAME_BY_ID,\n  GET_GAMES_BY_NAME,\n  GET_ALL_PLATFORMS,\n  FILTER_BY,\n  SORT_GAMES,\n  CREATE_GAME,\n  RESET_FILTERS,\n  LOADING,\n  NOT_FOUND,\n} from \"./common/constants\";\nimport { filter, sort } from \"./common/utils\";\n\nconst initialState = {\n  games: [],\n  gamesFiltered: [],\n  genres: [],\n  gameDetail: [],\n  platforms: [],\n  loading: true,\n  error: null,\n  response: null,\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return {\n        ...state,\n        games: action.payload,\n        gamesFiltered: sort(action.payload, \"AZ\"),\n        gameDetail: [],\n        error: null,\n        loading: false,\n        response: null,\n      };\n\n    case GET_ALL_GENRES:\n      return {\n        ...state,\n        genres: action.payload,\n        error: null,\n      };\n\n    case GET_GAME_BY_ID:\n      return {\n        ...state,\n        gameDetail: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case GET_GAMES_BY_NAME:\n      return {\n        ...state,\n        gamesFiltered: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case GET_ALL_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case FILTER_BY:\n      const gamesToFilter = state.games;\n      const gamesFiltered = filter(gamesToFilter, action.payload);\n      if (!gamesFiltered.length) {\n        return {\n          ...state,\n          gamesFiltered: gamesFiltered,\n          error: \"No results match the filters\",\n        };\n      } else {\n        return {\n          ...state,\n          gamesFiltered: gamesFiltered,\n        };\n      }\n\n    case SORT_GAMES:\n      const gamesToSort = state.gamesFiltered;\n      return {\n        ...state,\n        gamesFiltered: sort(gamesToSort, action.payload),\n      };\n\n    case RESET_FILTERS:\n      const filtersReseted = state.games;\n      return {\n        ...state,\n        gamesFiltered: sort(filtersReseted, { param: \"name\", type: \"ASC\" }),\n        error: null,\n      };\n\n    case CREATE_GAME:\n      return {\n        ...state,\n        response: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case NOT_FOUND:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}