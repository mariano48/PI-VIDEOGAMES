{"ast":null,"code":"var _jsxFileName = \"/home/mariano/Documents/PI-Videogames-main/client/src/components/Games.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllGenres, getAllPlatforms, getAllVideogames } from \"../redux/actions\";\nimport GameCards from \"./GameCards\";\nimport Loading from \"./Loading\";\nimport Pagination from \"./Pagination\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Games() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.games);\n  const genres = useSelector(state => state.genres);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 15;\n  const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n  const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n  const currentList = games.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    dispatch(getAllVideogames());\n    dispatch(getAllGenres());\n    dispatch(getAllPlatforms());\n  }, [dispatch]);\n\n  function handlePage(n) {\n    setCurrentPage(n);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentList.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: genres.length ? genres.map(g => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: g.name\n          }, g.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 60\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"api\",\n          children: \"Api results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"db\",\n          children: \"Db results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        games: games,\n        itemsPerPage: itemsPerPage,\n        handlePage: handlePage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GameCards, {\n        games: currentList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Games, \"7NrOYnD3DlrjvzKWp96DRJX28hw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getAllGenres","getAllPlatforms","getAllVideogames","GameCards","Loading","Pagination","SearchBar","Games","dispatch","games","state","genres","currentPage","setCurrentPage","itemsPerPage","indexOfFirstItem","indexOfLastItem","currentList","slice","handlePage","n","length","map","g","name","id"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/components/Games.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector} from 'react-redux'\nimport { getAllGenres, getAllPlatforms, getAllVideogames } from \"../redux/actions\";\nimport GameCards from \"./GameCards\";\nimport Loading from \"./Loading\";\nimport Pagination from \"./Pagination\";\nimport SearchBar from \"./SearchBar\";\n\nexport default function Games(){\n    const dispatch = useDispatch();\n    const games = useSelector((state)=> state.games);\n    const genres= useSelector((state)=> state.genres);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 15\n    const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n    const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n    const currentList = games.slice(indexOfFirstItem, indexOfLastItem)\n\n\n    useEffect(()=>{\n        dispatch(getAllVideogames())\n        dispatch(getAllGenres())\n        dispatch(getAllPlatforms())\n    }, [dispatch])\n\n\n    function handlePage(n){\n        setCurrentPage(n)\n    }\n\n    return (\n        <div>\n            {currentList.length? \n            <div>\n                <SearchBar/>\n                <select>\n                    {genres.length? genres.map(g=> {return <option key={g.id}>{g.name}</option>}):null}\n                </select>\n                <select>\n                    <option value='api'>Api results</option>\n                    <option value='db'>Db results</option>\n                </select>\n                <Pagination games={games} itemsPerPage={itemsPerPage} handlePage={handlePage} currentPage={currentPage}/>\n                <GameCards games={currentList}/> \n            </div>: \n            <Loading/>}\n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,gBAAxC,QAAgE,kBAAhE;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,KAAT,GAAgB;EAAA;;EAC3B,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAUA,KAAK,CAACD,KAAjB,CAAzB;EACA,MAAME,MAAM,GAAEZ,WAAW,CAAEW,KAAD,IAAUA,KAAK,CAACC,MAAjB,CAAzB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMiB,YAAY,GAAG,EAArB;EACA,MAAMC,gBAAgB,GAAG,CAACH,WAAW,GAAG,CAAf,IAAoBE,YAA7C;EACA,MAAME,eAAe,GAAGD,gBAAgB,GAAGD,YAA3C;EACA,MAAMG,WAAW,GAAGR,KAAK,CAACS,KAAN,CAAYH,gBAAZ,EAA8BC,eAA9B,CAApB;EAGApB,SAAS,CAAC,MAAI;IACVY,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;IACAM,QAAQ,CAACR,YAAY,EAAb,CAAR;IACAQ,QAAQ,CAACP,eAAe,EAAhB,CAAR;EACH,CAJQ,EAIN,CAACO,QAAD,CAJM,CAAT;;EAOA,SAASW,UAAT,CAAoBC,CAApB,EAAsB;IAClBP,cAAc,CAACO,CAAD,CAAd;EACH;;EAED,oBACI;IAAA,UACKH,WAAW,CAACI,MAAZ,gBACD;MAAA,wBACI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UACKV,MAAM,CAACU,MAAP,GAAeV,MAAM,CAACW,GAAP,CAAWC,CAAC,IAAG;UAAC,oBAAO;YAAA,UAAoBA,CAAC,CAACC;UAAtB,GAAaD,CAAC,CAACE,EAAf;YAAA;YAAA;YAAA;UAAA,QAAP;QAA4C,CAA5D,CAAf,GAA6E;MADlF;QAAA;QAAA;QAAA;MAAA,QAFJ,eAKI;QAAA,wBACI;UAAQ,KAAK,EAAC,KAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,KAAK,EAAC,IAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI,QAAC,UAAD;QAAY,KAAK,EAAEhB,KAAnB;QAA0B,YAAY,EAAEK,YAAxC;QAAsD,UAAU,EAAEK,UAAlE;QAA8E,WAAW,EAAEP;MAA3F;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI,QAAC,SAAD;QAAW,KAAK,EAAEK;MAAlB;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,gBAaD,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EAdJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAxCuBV,K;UACHT,W,EACHC,W,EACAA,W;;;KAHMQ,K"},"metadata":{},"sourceType":"module"}