{"ast":null,"code":"import { GET_ALL_VIDEOGAMES, GET_ALL_GENRES } from \"./actions\";\nconst initialState = {\n  games: [],\n  genres: [],\n  gameDetail: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return { ...state,\n        games: action.payload\n      };\n\n    case GET_ALL_GENRES:\n      return { ...state,\n        genres: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_ALL_VIDEOGAMES","GET_ALL_GENRES","initialState","games","genres","gameDetail","rootReducer","state","action","type","payload"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_ALL_VIDEOGAMES, GET_ALL_GENRES } from \"./actions\";\n\nconst initialState = {\n  games: [],\n  genres: [],\n  gameDetail: [],\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return {\n        ...state,\n        games: action.payload,\n      };\n\n    case GET_ALL_GENRES:\n      return {\n        ...state,\n        genres: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,cAA7B,QAAmD,WAAnD;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,MAAM,EAAE,EAFW;EAGnBC,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBL,YAAsB;EAAA,IAARM,MAAQ;;EAChE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKT,kBAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELJ,KAAK,EAAEK,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKT,cAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELH,MAAM,EAAEI,MAAM,CAACE;MAFV,CAAP;;IAKF;MACE,OAAOH,KAAP;EAdJ;AAgBD"},"metadata":{},"sourceType":"module"}