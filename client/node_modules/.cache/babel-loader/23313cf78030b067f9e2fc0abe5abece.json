{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_GAME, FILTER_BY, GET_ALL_GENRES, GET_ALL_PLATFORMS, GET_ALL_VIDEOGAMES, GET_GAMES_BY_NAME, GET_GAME_BY_ID, LOADING, ERROR, RESET_FILTERS, SORT_GAMES } from \"./common/constants\";\nexport function getAllVideogames() {\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      const response = await axios.get(`http://localhost:3001/videogames`);\n      return dispatch({\n        type: GET_ALL_VIDEOGAMES,\n        payload: response.data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n}\nexport function getAllGenres() {\n  return async function (dispatch) {\n    const response = await axios.get(`http://localhost:3001/genres`);\n    return dispatch({\n      type: GET_ALL_GENRES,\n      payload: response.data\n    });\n  };\n}\nexport function getGameById(value) {\n  const id = value.match.params.id;\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      const response = await axios.get(`http://localhost:3001/videogames/${id}`);\n      return dispatch({\n        type: GET_GAME_BY_ID,\n        payload: response.data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n}\nexport function getVideogamesByName(value) {\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      const response = await axios.get(`http://localhost:3001/videogames`, {\n        params: {\n          search: value\n        }\n      });\n      return dispatch({\n        type: GET_GAMES_BY_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n}\nexport function getAllPlatforms() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/platforms`);\n      return dispatch({\n        type: GET_ALL_PLATFORMS,\n        payload: response.data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n}\nexport function filterBy(values) {\n  return function (dispatch) {\n    return dispatch({\n      type: FILTER_BY,\n      payload: values\n    });\n  };\n}\nexport function sortGames(values) {\n  return function (dispatch) {\n    return dispatch({\n      type: SORT_GAMES,\n      payload: values\n    });\n  };\n}\nexport function createGame(values) {\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      const response = await axios.post(`http://localhost:3001/videogames`, {\n        name: values.name[0].toUpperCase() + values.name.slice(1).toLowerCase(),\n        description: values.description,\n        released: values.released,\n        rating: values.rating,\n        image: values.image,\n        platforms: values.platforms,\n        genres: values.genres\n      });\n      return dispatch({\n        type: CREATE_GAME,\n        payload: response.data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n}\nexport function resetFilters(payload) {\n  return function (dispatch) {\n    return dispatch({\n      type: RESET_FILTERS,\n      payload\n    });\n  };\n}\nexport function deleteGame(payload) {\n  return async function (dispatch) {\n    const response = axios.delete(\"http://localhost:3001/videogame\", {\n      payload\n    });\n    return dispatch({\n      type: DELETE_GAME,\n      payload: response.data\n    });\n  };\n}","map":{"version":3,"names":["axios","CREATE_GAME","FILTER_BY","GET_ALL_GENRES","GET_ALL_PLATFORMS","GET_ALL_VIDEOGAMES","GET_GAMES_BY_NAME","GET_GAME_BY_ID","LOADING","ERROR","RESET_FILTERS","SORT_GAMES","getAllVideogames","dispatch","type","response","get","payload","data","error","message","getAllGenres","getGameById","value","id","match","params","getVideogamesByName","search","getAllPlatforms","filterBy","values","sortGames","createGame","post","name","toUpperCase","slice","toLowerCase","description","released","rating","image","platforms","genres","resetFilters","deleteGame","delete","DELETE_GAME"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  CREATE_GAME,\n  FILTER_BY,\n  GET_ALL_GENRES,\n  GET_ALL_PLATFORMS,\n  GET_ALL_VIDEOGAMES,\n  GET_GAMES_BY_NAME,\n  GET_GAME_BY_ID,\n  LOADING,\n  ERROR,\n  RESET_FILTERS,\n  SORT_GAMES,\n} from \"./common/constants\";\n\nexport function getAllVideogames() {\n  return async function (dispatch) {\n    dispatch({ type: LOADING });\n    try {\n      const response = await axios.get(`http://localhost:3001/videogames`);\n      return dispatch({\n        type: GET_ALL_VIDEOGAMES,\n        payload: response.data,\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message,\n      });\n    }\n  };\n}\n\nexport function getAllGenres() {\n  return async function (dispatch) {\n    const response = await axios.get(`http://localhost:3001/genres`);\n    return dispatch({\n      type: GET_ALL_GENRES,\n      payload: response.data,\n    });\n  };\n}\n\nexport function getGameById(value) {\n  const id = value.match.params.id;\n  return async function (dispatch) {\n    dispatch({ type: LOADING });\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/videogames/${id}`\n      );\n      return dispatch({\n        type: GET_GAME_BY_ID,\n        payload: response.data,\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message,\n      });\n    }\n  };\n}\n\nexport function getVideogamesByName(value) {\n  return async function (dispatch) {\n    dispatch({ type: LOADING });\n    try {\n      const response = await axios.get(`http://localhost:3001/videogames`, {\n        params: { search: value },\n      });\n      return dispatch({\n        type: GET_GAMES_BY_NAME,\n        payload: response.data,\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message,\n      });\n    }\n  };\n}\n\nexport function getAllPlatforms() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/platforms`);\n      return dispatch({\n        type: GET_ALL_PLATFORMS,\n        payload: response.data,\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message,\n      });\n    }\n  };\n}\n\nexport function filterBy(values) {\n  return function (dispatch) {\n    return dispatch({\n      type: FILTER_BY,\n      payload: values,\n    });\n  };\n}\n\nexport function sortGames(values) {\n  return function (dispatch) {\n    return dispatch({\n      type: SORT_GAMES,\n      payload: values,\n    });\n  };\n}\n\nexport function createGame(values) {\n  return async function (dispatch) {\n    dispatch({ type: LOADING });\n    try {\n      const response = await axios.post(`http://localhost:3001/videogames`, {\n        name: values.name[0].toUpperCase() + values.name.slice(1).toLowerCase(),\n        description: values.description,\n        released: values.released,\n        rating: values.rating,\n        image: values.image,\n        platforms: values.platforms,\n        genres: values.genres,\n      });\n      return dispatch({\n        type: CREATE_GAME,\n        payload: response.data,\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message,\n      });\n    }\n  };\n}\n\nexport function resetFilters(payload) {\n  return function (dispatch) {\n    return dispatch({\n      type: RESET_FILTERS,\n      payload,\n    });\n  };\n}\n\nexport function deleteGame(payload) {\n  return async function (dispatch) {\n    const response = axios.delete(\"http://localhost:3001/videogame\", {\n      payload,\n    });\n    return dispatch({\n      type: DELETE_GAME,\n      payload: response.data,\n    });\n  };\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,kBALF,EAMEC,iBANF,EAOEC,cAPF,EAQEC,OARF,EASEC,KATF,EAUEC,aAVF,EAWEC,UAXF,QAYO,oBAZP;AAcA,OAAO,SAASC,gBAAT,GAA4B;EACjC,OAAO,gBAAgBC,QAAhB,EAA0B;IAC/BA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,kCAAX,CAAvB;MACA,OAAOH,QAAQ,CAAC;QACdC,IAAI,EAAET,kBADQ;QAEdY,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CAND,CAME,OAAOC,KAAP,EAAc;MACd,OAAON,QAAQ,CAAC;QACdC,IAAI,EAAEL,KADQ;QAEdQ,OAAO,EAAEE,KAAK,CAACC;MAFD,CAAD,CAAf;IAID;EACF,CAdD;AAeD;AAED,OAAO,SAASC,YAAT,GAAwB;EAC7B,OAAO,gBAAgBR,QAAhB,EAA0B;IAC/B,MAAME,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,8BAAX,CAAvB;IACA,OAAOH,QAAQ,CAAC;MACdC,IAAI,EAAEX,cADQ;MAEdc,OAAO,EAAEF,QAAQ,CAACG;IAFJ,CAAD,CAAf;EAID,CAND;AAOD;AAED,OAAO,SAASI,WAAT,CAAqBC,KAArB,EAA4B;EACjC,MAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;EACA,OAAO,gBAAgBX,QAAhB,EAA0B;IAC/BA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACpB,oCAAmCQ,EAAG,EADlB,CAAvB;MAGA,OAAOX,QAAQ,CAAC;QACdC,IAAI,EAAEP,cADQ;QAEdU,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CARD,CAQE,OAAOC,KAAP,EAAc;MACd,OAAON,QAAQ,CAAC;QACdC,IAAI,EAAEL,KADQ;QAEdQ,OAAO,EAAEE,KAAK,CAACC;MAFD,CAAD,CAAf;IAID;EACF,CAhBD;AAiBD;AAED,OAAO,SAASO,mBAAT,CAA6BJ,KAA7B,EAAoC;EACzC,OAAO,gBAAgBV,QAAhB,EAA0B;IAC/BA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,kCAAX,EAA8C;QACnEU,MAAM,EAAE;UAAEE,MAAM,EAAEL;QAAV;MAD2D,CAA9C,CAAvB;MAGA,OAAOV,QAAQ,CAAC;QACdC,IAAI,EAAER,iBADQ;QAEdW,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CARD,CAQE,OAAOC,KAAP,EAAc;MACd,OAAON,QAAQ,CAAC;QACdC,IAAI,EAAEL,KADQ;QAEdQ,OAAO,EAAEE,KAAK,CAACC;MAFD,CAAD,CAAf;IAID;EACF,CAhBD;AAiBD;AAED,OAAO,SAASS,eAAT,GAA2B;EAChC,OAAO,gBAAgBhB,QAAhB,EAA0B;IAC/B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,iCAAX,CAAvB;MACA,OAAOH,QAAQ,CAAC;QACdC,IAAI,EAAEV,iBADQ;QAEda,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CAND,CAME,OAAOC,KAAP,EAAc;MACd,OAAON,QAAQ,CAAC;QACdC,IAAI,EAAEL,KADQ;QAEdQ,OAAO,EAAEE,KAAK,CAACC;MAFD,CAAD,CAAf;IAID;EACF,CAbD;AAcD;AAED,OAAO,SAASU,QAAT,CAAkBC,MAAlB,EAA0B;EAC/B,OAAO,UAAUlB,QAAV,EAAoB;IACzB,OAAOA,QAAQ,CAAC;MACdC,IAAI,EAAEZ,SADQ;MAEde,OAAO,EAAEc;IAFK,CAAD,CAAf;EAID,CALD;AAMD;AAED,OAAO,SAASC,SAAT,CAAmBD,MAAnB,EAA2B;EAChC,OAAO,UAAUlB,QAAV,EAAoB;IACzB,OAAOA,QAAQ,CAAC;MACdC,IAAI,EAAEH,UADQ;MAEdM,OAAO,EAAEc;IAFK,CAAD,CAAf;EAID,CALD;AAMD;AAED,OAAO,SAASE,UAAT,CAAoBF,MAApB,EAA4B;EACjC,OAAO,gBAAgBlB,QAAhB,EAA0B;IAC/BA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACkC,IAAN,CAAY,kCAAZ,EAA+C;QACpEC,IAAI,EAAEJ,MAAM,CAACI,IAAP,CAAY,CAAZ,EAAeC,WAAf,KAA+BL,MAAM,CAACI,IAAP,CAAYE,KAAZ,CAAkB,CAAlB,EAAqBC,WAArB,EAD+B;QAEpEC,WAAW,EAAER,MAAM,CAACQ,WAFgD;QAGpEC,QAAQ,EAAET,MAAM,CAACS,QAHmD;QAIpEC,MAAM,EAAEV,MAAM,CAACU,MAJqD;QAKpEC,KAAK,EAAEX,MAAM,CAACW,KALsD;QAMpEC,SAAS,EAAEZ,MAAM,CAACY,SANkD;QAOpEC,MAAM,EAAEb,MAAM,CAACa;MAPqD,CAA/C,CAAvB;MASA,OAAO/B,QAAQ,CAAC;QACdC,IAAI,EAAEb,WADQ;QAEdgB,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CAdD,CAcE,OAAOC,KAAP,EAAc;MACd,OAAON,QAAQ,CAAC;QACdC,IAAI,EAAEL,KADQ;QAEdQ,OAAO,EAAEE,KAAK,CAACC;MAFD,CAAD,CAAf;IAID;EACF,CAtBD;AAuBD;AAED,OAAO,SAASyB,YAAT,CAAsB5B,OAAtB,EAA+B;EACpC,OAAO,UAAUJ,QAAV,EAAoB;IACzB,OAAOA,QAAQ,CAAC;MACdC,IAAI,EAAEJ,aADQ;MAEdO;IAFc,CAAD,CAAf;EAID,CALD;AAMD;AAED,OAAO,SAAS6B,UAAT,CAAoB7B,OAApB,EAA6B;EAClC,OAAO,gBAAgBJ,QAAhB,EAA0B;IAC/B,MAAME,QAAQ,GAAGf,KAAK,CAAC+C,MAAN,CAAa,iCAAb,EAAgD;MAC/D9B;IAD+D,CAAhD,CAAjB;IAGA,OAAOJ,QAAQ,CAAC;MACdC,IAAI,EAAEkC,WADQ;MAEd/B,OAAO,EAAEF,QAAQ,CAACG;IAFJ,CAAD,CAAf;EAID,CARD;AASD"},"metadata":{},"sourceType":"module"}