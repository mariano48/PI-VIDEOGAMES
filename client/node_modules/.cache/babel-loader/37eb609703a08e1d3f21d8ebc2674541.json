{"ast":null,"code":"var _jsxFileName = \"/home/mariano/Documents/PI-Videogames-main/client/src/components/Games.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllGenres, getAllPlatforms, getAllVideogames, sortGames } from \"../redux/actions\";\nimport GameCards from \"./GameCards\";\nimport Loading from \"./Loading\";\nimport Pagination from \"./Pagination\";\nimport SearchBar from \"./SearchBar\";\nimport Filters from \"./Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Games() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.gamesFiltered);\n  const genres = useSelector(state => state.genres);\n  const [filterValues, setFilterValues] = useState({\n    genre: \"All\",\n    created: \"All\"\n  });\n  const [sortValues, setSortValues] = useState({\n    param: \"name\",\n    type: \"ASC\"\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 15;\n  const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n  const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n  const currentList = games.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    dispatch(getAllVideogames());\n    dispatch(getAllGenres());\n    dispatch(getAllPlatforms());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(sortGames(sortValues));\n  }, [sortValues, dispatch]);\n\n  function handlePage(n) {\n    setCurrentPage(n);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentList.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        genres: genres,\n        handlePage: handlePage,\n        sortValues: sortValues,\n        filterValues: filterValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        games: games,\n        itemsPerPage: itemsPerPage,\n        handlePage: handlePage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameCards, {\n        games: currentList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Games, \"PzNiQm2XO4P4P9QelpkRewKlBXs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getAllGenres","getAllPlatforms","getAllVideogames","sortGames","GameCards","Loading","Pagination","SearchBar","Filters","Games","dispatch","games","state","gamesFiltered","genres","filterValues","setFilterValues","genre","created","sortValues","setSortValues","param","type","currentPage","setCurrentPage","itemsPerPage","indexOfFirstItem","indexOfLastItem","currentList","slice","handlePage","n","length"],"sources":["/home/mariano/Documents/PI-Videogames-main/client/src/components/Games.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllGenres,\n  getAllPlatforms,\n  getAllVideogames,\n  sortGames,\n} from \"../redux/actions\";\nimport GameCards from \"./GameCards\";\nimport Loading from \"./Loading\";\nimport Pagination from \"./Pagination\";\nimport SearchBar from \"./SearchBar\";\nimport Filters from \"./Filters\";\n\nexport default function Games() {\n  const dispatch = useDispatch();\n  const games = useSelector((state) => state.gamesFiltered);\n  const genres = useSelector((state) => state.genres);\n  const [filterValues, setFilterValues] = useState({\n    genre: \"All\",\n    created: \"All\",\n  });\n  const [sortValues, setSortValues] = useState({\n    param: \"name\",\n    type: \"ASC\",\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 15;\n  const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n  const indexOfLastItem = indexOfFirstItem + itemsPerPage;\n  const currentList = games.slice(indexOfFirstItem, indexOfLastItem);\n\n  useEffect(() => {\n    dispatch(getAllVideogames());\n    dispatch(getAllGenres());\n    dispatch(getAllPlatforms());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(sortGames(sortValues));\n  }, [sortValues, dispatch]);\n\n  function handlePage(n) {\n    setCurrentPage(n);\n  }\n  return (\n    <div>\n      {currentList.length ? (\n        <div>\n          <SearchBar />\n          <Filters\n            genres={genres}\n            handlePage={handlePage}\n            sortValues={sortValues}\n            filterValues={filterValues}\n          />\n          <Pagination\n            games={games}\n            itemsPerPage={itemsPerPage}\n            handlePage={handlePage}\n            currentPage={currentPage}\n          />\n          <GameCards games={currentList} />\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,gBAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAzB;EACA,MAAMC,MAAM,GAAGf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,MAAlB,CAA1B;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC;IAC/CoB,KAAK,EAAE,KADwC;IAE/CC,OAAO,EAAE;EAFsC,CAAD,CAAhD;EAIA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC;IAC3CwB,KAAK,EAAE,MADoC;IAE3CC,IAAI,EAAE;EAFqC,CAAD,CAA5C;EAIA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM4B,YAAY,GAAG,EAArB;EACA,MAAMC,gBAAgB,GAAG,CAACH,WAAW,GAAG,CAAf,IAAoBE,YAA7C;EACA,MAAME,eAAe,GAAGD,gBAAgB,GAAGD,YAA3C;EACA,MAAMG,WAAW,GAAGjB,KAAK,CAACkB,KAAN,CAAYH,gBAAZ,EAA8BC,eAA9B,CAApB;EAEA/B,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;IACAQ,QAAQ,CAACV,YAAY,EAAb,CAAR;IACAU,QAAQ,CAACT,eAAe,EAAhB,CAAR;EACD,CAJQ,EAIN,CAACS,QAAD,CAJM,CAAT;EAMAd,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACP,SAAS,CAACgB,UAAD,CAAV,CAAR;EACD,CAFQ,EAEN,CAACA,UAAD,EAAaT,QAAb,CAFM,CAAT;;EAIA,SAASoB,UAAT,CAAoBC,CAApB,EAAuB;IACrBP,cAAc,CAACO,CAAD,CAAd;EACD;;EACD,oBACE;IAAA,UACGH,WAAW,CAACI,MAAZ,gBACC;MAAA,wBACE,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QACE,MAAM,EAAElB,MADV;QAEE,UAAU,EAAEgB,UAFd;QAGE,UAAU,EAAEX,UAHd;QAIE,YAAY,EAAEJ;MAJhB;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE,QAAC,UAAD;QACE,KAAK,EAAEJ,KADT;QAEE,YAAY,EAAEc,YAFhB;QAGE,UAAU,EAAEK,UAHd;QAIE,WAAW,EAAEP;MAJf;QAAA;QAAA;QAAA;MAAA,QARF,eAcE,QAAC,SAAD;QAAW,KAAK,EAAEK;MAAlB;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAkBC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EAnBJ;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAvDuBnB,K;UACLX,W,EACHC,W,EACCA,W;;;KAHOU,K"},"metadata":{},"sourceType":"module"}